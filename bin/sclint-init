#!/usr/bin/env node
/*eslint no-console: "off"*/
'use strict';

var jetpack = require('fs-jetpack');
var path = require('path');

var chalk = require('chalk');
var ora = require('ora');
var program = require('commander');

program
    .usage('');

program.on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log(chalk.gray('    # init souche f2e eslint rules'));
    console.log('    $ sclint init');
});

program.parse(process.argv);

/**
 * Padding
 */
console.log();
process.on('exit', function() {
    console.log();
});

function main() {
    var eslintrcContent = jetpack.read(path.join(__dirname, '../templates/eslintrc.js'));

    if (jetpack.exists(path.join(process.cwd(), '.eslintrc'))) {
        jetpack.move(path.join(process.cwd(), '.eslintrc'), path.join(process.cwd(), '.eslintrc.old'));
    }

    if (jetpack.exists(path.join(process.cwd(), '.eslintrc.js'))) {
        jetpack.move(path.join(process.cwd(), '.eslintrc.js'), path.join(process.cwd(), '.eslintrc.js.old'));
    }

    if (jetpack.exists(path.join(process.cwd(), '.eslintrc.json'))) {
        jetpack.move(path.join(process.cwd(), '.eslintrc.json'), path.join(process.cwd(), '.eslintrc.json.old'));
    }

    jetpack.file(path.join(process.cwd(), '.eslintrc.js'), {
        content: eslintrcContent
    });

    console.log(chalk.green('  âœ“ generate eslintrc.js success'));
    console.log();
    console.log();
    console.log(chalk.gray('  run command to install dependencies: '));
    console.log();
    console.log(chalk.blue.bold('    $ npm install --save-dev eslint-config-airbnb eslint@2 --registry=https://registry.npm.taobao.org'));
}

main();
